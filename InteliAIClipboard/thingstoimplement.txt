

__ Train a model with Tensorflow to get a prediction about inserted History
    Link or link  from the inputvalue or history DB or Array ...

 *  Include the Prediction (.TEXT.) in the showTextArea as an Pill in upper left. 
 *  Include the Prediction (.TEXT.) underneath the Input Field as selectable Row. 

_______________________________________________________________________________

__ Include a Supabase OAuth GOOGLE provider  * Done *
   make an guard that all Sides only reachable with Authenticated profile. * open *

    Authentication: should this person be allowed in? If yes, who are they?
    Authorization: once they are in, what are they allowed to do?

_______________________________________________________________________________

__ Put in the Memory Lane, an delete object to demark it to blue, should be a modal named unmarked shown , 

    in MemoryLane after green link checkmark placed on the right.
    When the save or unmarked modal shown , close it automatically after 2 sec - the sec should count down in upper left from the modal

_______________________________________________________________________________

__ Fix the code and refactor the code.


__ Refactor the HistoryNavigatorTemplate and the HistoryNavigatorMethods

_______________________________________________________________________________

* started *
__ make an Chrome Extension 
files :             background.js
                    contentScript.js
                    manifest.json
                    Setup Method in Main.vue

Todo:              * done* get The Text from the different Tabs in the same Browser.
                    next point is to get it also from a other Chrome Instance.




_______________________________________________________________________________

___ * Done * make an server Endpoint called /api/aTags 
        call it in Main.vue additem Method push the values
        from the grabed aTags from the input

        files:          Main.vue under setup
                        aTags.js (server/db)
                        index.js (server/aTags)

        * DONE * PUT the given objext in supabase DB documentID and Result 
        
        This given Data should be a base to train A AI model
